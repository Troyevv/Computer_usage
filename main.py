from config import token_bot
import os
import telebot
from telebot import types, apihelper
import time
import webbrowser
import requests
import platform
import shutil
import ctypes
import pyautogui

bot_token = token_bot
bot = telebot.TeleBot(token_bot)
user_id = 405480562

additionals_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btnweb = types.KeyboardButton('üîó–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ')
btnoff = types.KeyboardButton('‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä')
btnreb = types.KeyboardButton('‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö')
btnstop = types.KeyboardButton('‚è∏–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ')
btnmore = types.KeyboardButton('‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ')
additionals_keyboard.row(btnoff, btnreb)
additionals_keyboard.row(btnstop, btnweb)
additionals_keyboard.row(btnmore)

vol_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btnvolup = types.KeyboardButton('üîä–£–≤–µ–ª–∏—á–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å')
btnvoldown = types.KeyboardButton('üîà–£–º–µ–Ω—å—à–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å')
btncmd = types.KeyboardButton('‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É')
btnback = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥')
vol_keyboard.row(btnvolup, btnvoldown)
vol_keyboard.row(btncmd, btnback)

# @bot.message_handler(commands=['start'])
# def start(message):
#     user_id = message.from_user.id
#     return (user_id)

MessageBox = ctypes.windll.user32.MessageBoxW
if os.path.exists('msg.pt'):
    pass
else:
    bot.send_message(user_id, '–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!', parse_mode='markdown')
    MessageBox(None, f'Exe —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–∫.', 0)
    f = open('msg.pt', 'tw', encoding='utf-8')
    f.close()
bot.send_message(user_id, '–ü–ö –∑–∞–ø—É—â–µ–Ω', reply_markup=additionals_keyboard)



@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä':
        bot.send_message(user_id,'–í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö...')
        os.system('shutdown -s /t 0 /f')
        bot.register_next_step_handler(message, get_text_messages)

    elif message.text == '‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ü–ö':
        bot.send_message(user_id, '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ü–ö...')
        os.system('shutdown -r /t 0 /f')
        bot.register_next_step_handler(message, get_text_messages)

    elif message.text == 'üîó–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ':
        bot.send_message(user_id, '–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É:')
        bot.register_next_step_handler(message, web_process)

    elif message.text == '‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ':
        bot.send_message(user_id, '‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', reply_markup=vol_keyboard)

    elif message.text == '‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É':
        bot.send_message(user_id, '–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É:')
        bot.register_next_step_handler(message, cmd_process)

    elif message.text == 'üîä–£–≤–µ–ª–∏—á–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å':
        bot.send_message(user_id, '–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å...')
        pyautogui.press('volumeup')
        bot.register_next_step_handler(message, get_text_messages)

    elif message.text == 'üîà–£–º–µ–Ω—å—à–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å':
        bot.send_message(user_id, '–£–º–µ–Ω—å—à–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å...')
        pyautogui.press('volumedown')
        bot.register_next_step_handler(message, get_text_messages)

    elif message.text == '‚è∏–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ':
        bot.send_message(user_id, '–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ...')
        pyautogui.press('Space')
        bot.register_next_step_handler(message, get_text_messages)

    elif message.text == '‚è™–ù–∞–∑–∞–¥':
            back(message)

def back(message):
    bot.register_next_step_handler(message, get_text_messages)
    bot.send_message(user_id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=additionals_keyboard)

def web_process(message):
    bot.send_chat_action(user_id, 'typing')
    try:
        webbrowser.open(message.text, new=0)
        bot.send_message(user_id, f'–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ "{message.text}" –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω', reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, get_text_messages)
    except:
        bot.send_message(user_id, '–û—à–∏–±–∫–∞! –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞')
        bot.register_next_step_handler(message, get_text_messages)

def cmd_process(message):
    bot.send_chat_action(user_id, 'typing')
    try:
        os.system(message.text)
        bot.send_message(user_id, f'–ö–æ–º–∞–Ω–¥–∞ "{message.text}" –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!', reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, get_text_messages)
    except:
        bot.send_message(user_id, '–û—à–∏–±–∫–∞! –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')
        bot.register_next_step_handler(message, get_text_messages)

while True:
	try:
		bot.polling(none_stop=True, interval=0, timeout=20)
	except Exception as E:
		print(E.args)
		time.sleep(2)
